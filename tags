!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Go	package	/the real package specified by the package name/
!_TAG_FIELD_DESCRIPTION!Go	packageName	/the name for referring the package/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!DTD	E,entity	/entities/
!_TAG_KIND_DESCRIPTION!DTD	a,attribute	/attributes/
!_TAG_KIND_DESCRIPTION!DTD	e,element	/elements/
!_TAG_KIND_DESCRIPTION!DTD	n,notation	/notations/
!_TAG_KIND_DESCRIPTION!DTD	p,parameterEntity	/parameter entities/
!_TAG_KIND_DESCRIPTION!Go	M,anonMember	/struct anonymous members/
!_TAG_KIND_DESCRIPTION!Go	P,packageName	/name for specifying imported package/
!_TAG_KIND_DESCRIPTION!Go	Y,unknown	/unknown/
!_TAG_KIND_DESCRIPTION!Go	a,talias	/type aliases/
!_TAG_KIND_DESCRIPTION!Go	c,const	/constants/
!_TAG_KIND_DESCRIPTION!Go	f,func	/functions/
!_TAG_KIND_DESCRIPTION!Go	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!Go	m,member	/struct members/
!_TAG_KIND_DESCRIPTION!Go	n,methodSpec	/interface method specification/
!_TAG_KIND_DESCRIPTION!Go	p,package	/packages/
!_TAG_KIND_DESCRIPTION!Go	s,struct	/structs/
!_TAG_KIND_DESCRIPTION!Go	t,type	/types/
!_TAG_KIND_DESCRIPTION!Go	v,var	/variables/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!DTD	0.0	/current.age/
!_TAG_PARSER_VERSION!Go	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/ralf/dev/unolink-client/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20231203.0/
!_TAG_ROLE_DESCRIPTION!DTD!element	attOwner	/attributes owner/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	condition	/conditions/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	elementName	/element names/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	partOfAttDef	/part of attribute definition/
!_TAG_ROLE_DESCRIPTION!Go!package	imported	/imported package/
!_TAG_ROLE_DESCRIPTION!Go!unknown	receiverType	/receiver type/
Acc	definitions/definitions.go	/^	Acc           uint16$/;"	m	struct:definitions.DeviceState	typeref:typename:uint16
AddressMatches	definitions/definitions.go	/^func (d *DeviceState) AddressMatches(addr RadioAddress) bool {$/;"	f	struct:definitions.DeviceState	typeref:typename:bool
Clear	definitions/definitions.go	/^func (d *PacketCounter) Clear() {$/;"	f	struct:definitions.PacketCounter
Counter	definitions/definitions.go	/^	Counter       PacketCounter$/;"	m	struct:definitions.DeviceState	typeref:typename:PacketCounter
CreateDevice	stats/stats.go	/^func CreateDevice(addr [3]uint8) *def.DeviceState {$/;"	f	package:stats	typeref:typename:*def.DeviceState
CumDistance	definitions/definitions.go	/^	CumDistance   [5]uint32$/;"	m	struct:definitions.DeviceState	typeref:typename:[5]uint32
Cumulative	definitions/definitions.go	/^	Cumulative    = 0x22$/;"	c	package:definitions
Debug	main.go	/^    Debug   Log$/;"	v	package:main	typeref:struct:Log
Dec	definitions/definitions.go	/^	Dec           uint16$/;"	m	struct:definitions.DeviceState	typeref:typename:uint16
DecodePacket	stats/stats.go	/^func DecodePacket(packet []byte) def.DeviceState {$/;"	f	package:stats	typeref:typename:def.DeviceState
DeviceState	definitions/definitions.go	/^type DeviceState struct {$/;"	s	package:definitions
Devices	definitions/definitions.go	/^var Devices []DeviceState$/;"	v	package:definitions	typeref:typename:[]DeviceState
Distance	definitions/definitions.go	/^	Distance      float32$/;"	m	struct:definitions.DeviceState	typeref:typename:float32
Energy	definitions/definitions.go	/^	Energy        float32$/;"	m	struct:definitions.DeviceState	typeref:typename:float32
EquivDistance	definitions/definitions.go	/^	EquivDistance float32$/;"	m	struct:definitions.DeviceState	typeref:typename:float32
Error	main.go	/^    Error   Log$/;"	v	package:main	typeref:struct:Log
Execute	cmd/root.go	/^func Execute() {$/;"	f	package:cmd
GetDevice	stats/stats.go	/^func GetDevice(addr def.RadioAddress) *def.DeviceState {$/;"	f	package:stats	typeref:typename:*def.DeviceState
Handle	connection/connection.go	/^func Handle(address string, streamPort, restPort uint16) {$/;"	f	package:connection
Hmld	definitions/definitions.go	/^	Hmld          uint32$/;"	m	struct:definitions.DeviceState	typeref:typename:uint32
Hrm	definitions/definitions.go	/^	Hrm           uint8$/;"	m	struct:definitions.DeviceState	typeref:typename:uint8
Id	definitions/definitions.go	/^	Id            RadioAddress$/;"	m	struct:definitions.DeviceState	typeref:typename:RadioAddress
Impact	definitions/definitions.go	/^	Impact        uint16$/;"	m	struct:definitions.DeviceState	typeref:typename:uint16
Info	main.go	/^    Info    Log$/;"	v	package:main	typeref:struct:Log
Init	display/display.go	/^func (m model) Init() tea.Cmd { return tickCmd(m) }$/;"	f	struct:display.model	typeref:typename:tea.Cmd
Instantaneous	definitions/definitions.go	/^	Instantaneous = 0x23$/;"	c	package:definitions
Jump	definitions/definitions.go	/^	Jump          uint16$/;"	m	struct:definitions.DeviceState	typeref:typename:uint16
Lat	definitions/definitions.go	/^	Lat           uint32$/;"	m	struct:definitions.DeviceState	typeref:typename:uint32
LiveOn	definitions/definitions.go	/^	LiveOn        bool$/;"	m	struct:definitions.DeviceState	typeref:typename:bool
Lng	definitions/definitions.go	/^	Lng           uint32$/;"	m	struct:definitions.DeviceState	typeref:typename:uint32
Log	main.go	/^func (l Log) Log(msg string) {$/;"	f	struct:main.Log
Log	main.go	/^type Log struct {$/;"	s	package:main
NumCumulative	definitions/definitions.go	/^	NumCumulative    uint32$/;"	m	struct:definitions.PacketCounter	typeref:typename:uint32
NumInstantaneous	definitions/definitions.go	/^	NumInstantaneous uint32$/;"	m	struct:definitions.PacketCounter	typeref:typename:uint32
NumOtherData1	definitions/definitions.go	/^	NumOtherData1    uint32$/;"	m	struct:definitions.PacketCounter	typeref:typename:uint32
NumOtherData2	definitions/definitions.go	/^	NumOtherData2    uint32$/;"	m	struct:definitions.PacketCounter	typeref:typename:uint32
NumOtherData3	definitions/definitions.go	/^	NumOtherData3    uint32$/;"	m	struct:definitions.PacketCounter	typeref:typename:uint32
NumPosition	definitions/definitions.go	/^	NumPosition      uint32$/;"	m	struct:definitions.PacketCounter	typeref:typename:uint32
OtherData1	definitions/definitions.go	/^	OtherData1    = 0x28$/;"	c	package:definitions
OtherData2	definitions/definitions.go	/^	OtherData2    = 0x2B$/;"	c	package:definitions
OtherData3	definitions/definitions.go	/^	OtherData3    = 0x2C$/;"	c	package:definitions
PacketCounter	definitions/definitions.go	/^type PacketCounter struct {$/;"	s	package:definitions
PeCounter	definitions/definitions.go	/^	PeCounter     uint16$/;"	m	struct:definitions.DeviceState	typeref:typename:uint16
Position	definitions/definitions.go	/^	Position      = 0x24$/;"	c	package:definitions
Power	definitions/definitions.go	/^	Power         float32$/;"	m	struct:definitions.DeviceState	typeref:typename:float32
PrintCounter	definitions/definitions.go	/^func (d *DeviceState) PrintCounter() {$/;"	f	struct:definitions.DeviceState
RadioAddress	definitions/definitions.go	/^type RadioAddress [3]uint8$/;"	t	package:definitions	typeref:typename:[3]uint8
RadioAddressFromString	definitions/definitions.go	/^func RadioAddressFromString(s string) (RadioAddress, error) {$/;"	f	package:definitions	typeref:typename:(RadioAddress, error)
RenderTable	display/display.go	/^func RenderTable() {$/;"	f	package:display
Slice	definitions/definitions.go	/^func (r RadioAddress) Slice() []byte {$/;"	f	type:definitions.RadioAddress	typeref:typename:[]byte
Slot	definitions/definitions.go	/^	Slot          uint8$/;"	m	struct:definitions.DeviceState	typeref:typename:uint8
Speed	definitions/definitions.go	/^	Speed         uint16$/;"	m	struct:definitions.DeviceState	typeref:typename:uint16
String	definitions/definitions.go	/^func (d *PacketCounter) String() string {$/;"	f	struct:definitions.PacketCounter	typeref:typename:string
String	definitions/definitions.go	/^func (r RadioAddress) String() string {$/;"	f	type:definitions.RadioAddress	typeref:typename:string
TagId	definitions/definitions.go	/^	TagId         uint16$/;"	m	struct:definitions.DeviceState	typeref:typename:uint16
Time	definitions/definitions.go	/^	Time          uint32$/;"	m	struct:definitions.DeviceState	typeref:typename:uint32
Total	definitions/definitions.go	/^func (d *PacketCounter) Total() uint32 {$/;"	f	struct:definitions.PacketCounter	typeref:typename:uint32
Update	display/display.go	/^func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {$/;"	f	struct:display.model	typeref:typename:(tea.Model, tea.Cmd)
UpdateCumulative	definitions/definitions.go	/^func (d *DeviceState) UpdateCumulative(packet []byte) {$/;"	f	struct:definitions.DeviceState
UpdateInstantaneous	definitions/definitions.go	/^func (d *DeviceState) UpdateInstantaneous(packet []byte) {$/;"	f	struct:definitions.DeviceState
UpdateInterval	display/display.go	/^const UpdateInterval = 1 * time.Second$/;"	c	package:display
UpdateOtherData1	definitions/definitions.go	/^func (d *DeviceState) UpdateOtherData1(packet []byte) {$/;"	f	struct:definitions.DeviceState
UpdateOtherData2	definitions/definitions.go	/^func (d *DeviceState) UpdateOtherData2(packet []byte) {$/;"	f	struct:definitions.DeviceState
UpdateOtherData3	definitions/definitions.go	/^func (d *DeviceState) UpdateOtherData3(packet []byte) {$/;"	f	struct:definitions.DeviceState
UpdatePosition	definitions/definitions.go	/^func (d *DeviceState) UpdatePosition(packet []byte) {$/;"	f	struct:definitions.DeviceState
View	display/display.go	/^func (m model) View() string {$/;"	f	struct:display.model	typeref:typename:string
Vo2	definitions/definitions.go	/^	Vo2           float32$/;"	m	struct:definitions.DeviceState	typeref:typename:float32
Warn	main.go	/^    Warn    Log$/;"	v	package:main	typeref:struct:Log
baseStyle	display/display.go	/^var baseStyle = lipgloss.NewStyle().$/;"	v	package:display
cmd	cmd/root.go	/^package cmd$/;"	p
connection	connection/connection.go	/^package connection$/;"	p
content	display/display.go	/^	content bool \/\/ true = states, false = counters$/;"	m	struct:display.model	typeref:typename:bool
cursor	display/display.go	/^	cursor  int$/;"	m	struct:display.model	typeref:typename:int
def	display/display.go	/^	def "unolink-client\/definitions"$/;"	P	package:unolink-client/definitions
def	stats/stats.go	/^	def "unolink-client\/definitions"$/;"	P	package:unolink-client/definitions
definitions	definitions/definitions.go	/^package definitions$/;"	p
devices	display/display.go	/^	devices *[]def.DeviceState$/;"	m	struct:display.model	typeref:typename:*[]def.DeviceState
display	display/display.go	/^package display$/;"	p
handleREST	connection/connection.go	/^func handleREST(address string, restPort uint16) {$/;"	f	package:connection
handleStream	connection/connection.go	/^func handleStream(address string, streamPort uint16) {$/;"	f	package:connection
init	cmd/root.go	/^func init() {$/;"	f	package:cmd
initLogs	main.go	/^func initLogs() {$/;"	f	package:main
initalModel	display/display.go	/^func initalModel() model {$/;"	f	package:display	typeref:typename:model
logStyle	main.go	/^    logStyle lipgloss.Style$/;"	m	struct:main.Log	typeref:typename:lipgloss.Style
logType	main.go	/^    logType string$/;"	m	struct:main.Log	typeref:typename:string
main	main.go	/^func main() {$/;"	f	package:main
main	main.go	/^package main$/;"	p
model	display/display.go	/^type model struct {$/;"	s	package:display
restPort	cmd/root.go	/^	restPort   uint16$/;"	v	package:cmd	typeref:typename:uint16
rootCmd	cmd/root.go	/^	rootCmd = &cobra.Command{$/;"	v	package:cmd
run	cmd/root.go	/^func run(address string, streamPort, restPort uint16) {$/;"	f	package:cmd
start	display/display.go	/^var start = time.Now()$/;"	v	package:display
stats	stats/stats.go	/^package stats$/;"	p
streamPort	cmd/root.go	/^	streamPort uint16$/;"	v	package:cmd	typeref:typename:uint16
table	display/display.go	/^	table   table.Model$/;"	m	struct:display.model	typeref:typename:table.Model
tea	display/display.go	/^	tea "github.com\/charmbracelet\/bubbletea"$/;"	P	package:github.com/charmbracelet/bubbletea
tickCmd	display/display.go	/^func tickCmd(m model) tea.Cmd {$/;"	f	package:display	typeref:typename:tea.Cmd
tickMsg	display/display.go	/^type tickMsg time.Time$/;"	t	package:display	typeref:typename:time.Time
ulAddress	cmd/root.go	/^	ulAddress  string$/;"	v	package:cmd	typeref:typename:string
updatePacket	stats/stats.go	/^func updatePacket(last *uint32, current []uint8) {$/;"	f	package:stats
updateTable	display/display.go	/^func (m model) updateTable() table.Model {$/;"	f	struct:display.model	typeref:typename:table.Model
