!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Go	package	/the real package specified by the package name/
!_TAG_FIELD_DESCRIPTION!Go	packageName	/the name for referring the package/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!DTD	E,entity	/entities/
!_TAG_KIND_DESCRIPTION!DTD	a,attribute	/attributes/
!_TAG_KIND_DESCRIPTION!DTD	e,element	/elements/
!_TAG_KIND_DESCRIPTION!DTD	n,notation	/notations/
!_TAG_KIND_DESCRIPTION!DTD	p,parameterEntity	/parameter entities/
!_TAG_KIND_DESCRIPTION!Go	M,anonMember	/struct anonymous members/
!_TAG_KIND_DESCRIPTION!Go	P,packageName	/name for specifying imported package/
!_TAG_KIND_DESCRIPTION!Go	Y,unknown	/unknown/
!_TAG_KIND_DESCRIPTION!Go	a,talias	/type aliases/
!_TAG_KIND_DESCRIPTION!Go	c,const	/constants/
!_TAG_KIND_DESCRIPTION!Go	f,func	/functions/
!_TAG_KIND_DESCRIPTION!Go	i,interface	/interfaces/
!_TAG_KIND_DESCRIPTION!Go	m,member	/struct members/
!_TAG_KIND_DESCRIPTION!Go	n,methodSpec	/interface method specification/
!_TAG_KIND_DESCRIPTION!Go	p,package	/packages/
!_TAG_KIND_DESCRIPTION!Go	s,struct	/structs/
!_TAG_KIND_DESCRIPTION!Go	t,type	/types/
!_TAG_KIND_DESCRIPTION!Go	v,var	/variables/
!_TAG_KIND_DESCRIPTION!JavaScript	C,constant	/constants/
!_TAG_KIND_DESCRIPTION!JavaScript	G,getter	/getters/
!_TAG_KIND_DESCRIPTION!JavaScript	M,field	/fields/
!_TAG_KIND_DESCRIPTION!JavaScript	S,setter	/setters/
!_TAG_KIND_DESCRIPTION!JavaScript	c,class	/classes/
!_TAG_KIND_DESCRIPTION!JavaScript	f,function	/functions/
!_TAG_KIND_DESCRIPTION!JavaScript	g,generator	/generators/
!_TAG_KIND_DESCRIPTION!JavaScript	m,method	/methods/
!_TAG_KIND_DESCRIPTION!JavaScript	p,property	/properties/
!_TAG_KIND_DESCRIPTION!JavaScript	v,variable	/global variables/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!DTD	0.0	/current.age/
!_TAG_PARSER_VERSION!Go	0.0	/current.age/
!_TAG_PARSER_VERSION!JavaScript	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/ralf/dev/unolink-client/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20231203.0/
!_TAG_ROLE_DESCRIPTION!DTD!element	attOwner	/attributes owner/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	condition	/conditions/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	elementName	/element names/
!_TAG_ROLE_DESCRIPTION!DTD!parameterEntity	partOfAttDef	/part of attribute definition/
!_TAG_ROLE_DESCRIPTION!Go!package	imported	/imported package/
!_TAG_ROLE_DESCRIPTION!Go!unknown	receiverType	/receiver type/
Cumulative	main.go	/^    Cumulative = 0x22$/;"	c	package:main
Debug	main.go	/^    Debug   Log$/;"	v	package:main	typeref:struct:Log
DeviceStats	main.go	/^type DeviceStats struct {$/;"	s	package:main
Error	main.go	/^    Error   Log$/;"	v	package:main	typeref:struct:Log
IPAddress	main.go	/^type IPAddress      []string$/;"	t	package:main	typeref:typename:[]string
Info	main.go	/^    Info    Log$/;"	v	package:main	typeref:struct:Log
Instantaneous	main.go	/^    Instantaneous = 0x23$/;"	c	package:main
Log	main.go	/^func (l Log) Log(msg string) {$/;"	f	struct:main.Log
Log	main.go	/^type Log struct {$/;"	s	package:main
OtherData1	main.go	/^    OtherData1 = 0x28$/;"	c	package:main
OtherData2	main.go	/^    OtherData2 = 0x2B$/;"	c	package:main
OtherData3	main.go	/^    OtherData3 = 0x2C$/;"	c	package:main
Position	main.go	/^    Position = 0x24$/;"	c	package:main
RadioAddress	main.go	/^type RadioAddress   [3]uint8$/;"	t	package:main	typeref:typename:[3]uint8
Warn	main.go	/^    Warn    Log$/;"	v	package:main	typeref:struct:Log
anonymousFunctionce304a8a0100	node/main.js	/^client.connect(2281, '127.0.0.1', function() {$/;"	f
anonymousFunctionce304a8a0200	node/main.js	/^client.on('data', function(data) {$/;"	f
anonymousFunctionce304a8a0300	node/main.js	/^client.on('close', function() {$/;"	f
client	node/main.js	/^const client = new net.Socket();$/;"	C
createDevice	main.go	/^func createDevice(addr [3]uint8) *DeviceStats {$/;"	f	package:main	typeref:typename:*DeviceStats
decodePacket	main.go	/^func decodePacket(packet []byte) DeviceStats {$/;"	f	package:main	typeref:typename:DeviceStats
devices	main.go	/^    devices []DeviceStats$/;"	v	package:main	typeref:typename:[]DeviceStats
devices	node/main.js	/^var devices = new Array()$/;"	v
getDevice	main.go	/^func getDevice(addr [3]byte) *DeviceStats {$/;"	f	package:main	typeref:typename:*DeviceStats
id	main.go	/^    id                  RadioAddress$/;"	m	struct:main.DeviceStats	typeref:typename:RadioAddress
initLogs	main.go	/^func initLogs() {$/;"	f	package:main
logStyle	main.go	/^    logStyle lipgloss.Style$/;"	m	struct:main.Log	typeref:typename:lipgloss.Style
logType	main.go	/^    logType string$/;"	m	struct:main.Log	typeref:typename:string
main	main.go	/^func main() {$/;"	f	package:main
main	main.go	/^package main$/;"	p
net	node/main.js	/^const net = require('net');$/;"	C
num_cumulative	main.go	/^    num_cumulative     uint32$/;"	m	struct:main.DeviceStats	typeref:typename:uint32
num_instantaneous	main.go	/^    num_instantaneous  uint32$/;"	m	struct:main.DeviceStats	typeref:typename:uint32
num_otherdata1	main.go	/^    num_otherdata1     uint32$/;"	m	struct:main.DeviceStats	typeref:typename:uint32
num_otherdata2	main.go	/^    num_otherdata2     uint32$/;"	m	struct:main.DeviceStats	typeref:typename:uint32
num_otherdata3	main.go	/^    num_otherdata3     uint32$/;"	m	struct:main.DeviceStats	typeref:typename:uint32
num_position	main.go	/^    num_position       uint32$/;"	m	struct:main.DeviceStats	typeref:typename:uint32
updatePacket	main.go	/^func updatePacket(last *uint32, current []uint8) {$/;"	f	package:main
